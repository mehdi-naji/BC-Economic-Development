EMPL_dashdata <- EMPL_dashdata[!duplicated(EMPL_dashdata), ]
EMPL_dashdata <- EMPL_dashdata |>
select(Year, GEO, NAICS, `Labour force characteristics`, VALUE) |>
distinct() |>
pivot_wider(names_from = `Labour force characteristics`,
values_from = VALUE)
# Greenhouse Gas Emissions by industry and province
# GHGE_df <- statcan_download_data("38-10-0098-01", "eng")
# GHGE_df <- statcan_download_data("38-10-0097-01", "eng")
#######################################################
# List of Setors
# GHGE_df <- GHGE_df |>
#   mutate (Secategory = case_when(
#     Sector == "Total, industries" ~ "Total, industries",
#     Sector == "Total, households" ~ "Total, households",
#     Sector == "Total, industries and households" ~ "Total, industries and households",
#     Sector %in% c("Crop and animal production [BS11A00]",
#                   "Forestry and logging [BS11300]",
#                   "Fishing, hunting and trapping [BS11400]",
#                   "Support activities for agriculture and forestry [BS11500]") ~
#                         "Agriculture, Foresty, fishing and hunting",
#     Sector %in% c("Oil and gas extraction [BS21100]",
#                   "Coal mining [BS21210]",
#                   "Metal ore mining [BS21220]",
#                   "Non-metallic mineral mining and quarrying [BS21230]",
#                   "Support activities for mining and oil and gas extraction [BS21300]") ~
#                         "Mining, quarrying, and oil and gas extractoin",
#     Sector %in% c("Electric power generation, transmission and distribution [BS22110]",
#                   "Natural gas distribution, water, sewage and other systems [BS221A0]") ~
#                         "Utilities",
#     Sector %in% c("Residential building construction [BS23A00]",
#                   "Non-residential building construction [BS23B00]",
#                   "Transportation engineering construction [BS23C10]",
#                   "Oil and gas engineering construction [BS23C20]",
#                   "Electric power engineering construction [BS23C30]",
#                   "Communication engineering construction [BS23C40]",
#                   "Other engineering construction [BS23C50]",
#                   "Other activities of the construction industry [BS23E00]",
#                   "Repair construction [BS23D00]") ~
#                         "Construction",
#     Sector %in% c("Animal food manufacturing [BS31110]",
#                   "Sugar and confectionery product manufacturing [BS31130]",
#                   "Fruit and vegetable preserving and specialty food manufacturing [BS31140]",
#                   "Dairy product manufacturing [BS31150]" ,
#                   "Meat product manufacturing [BS31160]" ,
#                   "Seafood product preparation and packaging [BS31170]",
#                   "Miscellaneous food manufacturing [BS311A0]",
#                   "Soft drink and ice manufacturing [BS31211]",
#                   "Breweries [BS31212]",
#                   "Wineries and distilleries [BS3121A]",
#                   "Tobacco manufacturing [BS31220]",
#                   "Textile and textile product mills [BS31A00]",
#                   "Clothing and leather and allied product manufacturing [BS31B00]",
#                   "Wood product manufacturing [BS32100]",
#                   "Pulp, paper and paperboard mills [BS32210]",
#                   "Converted paper product manufacturing [BS32220]",
#                   "Printing and related support activities [BS32300]",
#                   "Petroleum and coal product manufacturing [BS32400]",
#                   "Basic chemical manufacturing [BS32510]",
#                   "Pesticide, fertilizer and other agricultural chemical manufacturing [BS32530]",
#                   "Pharmaceutical and medicine manufacturing [BS32540]",
#                   "Miscellaneous chemical product manufacturing [BS325C0]",
#                   "Plastic product manufacturing [BS32610]",
#                   "Rubber product manufacturing [BS32620]",
#                   "Non-metallic mineral product manufacturing (except cement and concrete products) [BS327A0]",
#                   "Cement and concrete product manufacturing [BS32730]",
#                   "Primary metal manufacturing [BS33100]",
#                   "Fabricated metal product manufacturing [BS33200]",
#                   "Machinery manufacturing [BS33300]",
#                   "Computer and peripheral equipment manufacturing [BS33410]",
#                   "Electronic product manufacturing [BS334B0]",
#                   "Electrical  equipment and component manufacturing [BS335A0]",
#                   "Household appliance manufacturing [BS33520]",
#                   "Motor vehicle manufacturing [BS33610]",
#                   "Motor vehicle body and trailer manufacturing [BS33620]",
#                   "Motor vehicle parts manufacturing [BS33630]" ,
#                   "Aerospace product and parts manufacturing [BS33640]",
#                   "Railroad rolling stock manufacturing [BS33650]",
#                   "Ship and boat building [BS33660]",
#                   "Other transportation equipment manufacturing [BS33690]",
#                   "Furniture and related product manufacturing [BS33700]",
#                   "Miscellaneous manufacturing [BS33900]")  ~
#                             "Manufacturing",
#     Sector %in% c("Wholesale trade [BS41000]") ~ "Wholesale trade",
#     Sector %in% c("Retail trade [BS4A000]") ~ "Retail trade",
#     Sector %in% c("Air transportation [BS48100]",
#                   "Rail transportation [BS48200]",
#                   "Water transportation [BS48300]",
#                   "Truck transportation [BS48400]",
#                   "Transit, ground passenger and scenic and sightseeing transportation, taxi and limousine service and support activities for transportation [BS48B00]",
#                   "Pipeline transportation [BS48600]",
#                   "Postal service and couriers and messengers [BS49A00]",
#                   "Warehousing and storage [BS49300]") ~
#                           "Transportation and warehousing",
#     Sector %in% c("Motion picture and sound recording industries [BS51200]",
#                   "Radio and television broadcasting [BS51510]",
#                   "Publishing, pay/specialty services, telecommunications and other information services [BS51B00]") ~
#                           "Information and culture industries",
#     Sector %in% c("Depository credit intermediation and monetary authorities [BS52B00]",
#                   "Insurance carriers [BS52410]") ~
#                           "Finance and insurance",
#     Sector %in% c("Lessors of real estate [BS53110]",
#                   "Owner-occupied dwellings [BS5311A]",
#                   "Rental and leasing services and lessors of non-financial intangible assets (except copyrighted works) [BS53B00]") ~
#                           "Real estate and rental leasing",
#     Sector %in% c("Legal, accounting and architectural, engineering and related services [BS541C0]",
#                   "Computer systems design and other professional, scientific and technical services [BS541D0]",
#                   "Advertising, public relations and related services [BS54180]") ~
#                           "Professional, scientific and technical services",
#     Sector %in% c("Administrative and support services [BS56100]",
#                   "Waste management and remediation services [BS56200]") ~
#                           "Administrative and support, waste management and remediation services",
#     Sector %in% c("Educational services [BS61000]") ~ "Educational services",
#     Sector %in% c("Health care and social assistance [BS62000]") ~ "Health care and social assistance",
#     Sector %in% c("Arts, entertainment and recreation [BS71000]") ~ "Arts, entertainment and recreation",
#     Sector %in% c("Accommodation and food services [BS72000]") ~  "Accommodation and food services",
#     Sector %in% c("Repair and maintenance [BS81100]",
#                   "Personal services and private households [BS81A00]",
#                   "Professional and similar organisations [BS81300]",
#                   "Religious organizations [NP81310]") ~
#                           "Other services"))
# dd <- subset(GHGE_df, grepl("BS11", Sector))
###======================###
###  Cleaning GDP_df
# df <- data.frame()
# df_GHGE <- data.frame(GHGE_df = unique(GHGE_df$Sector))
# df_GDP <- data.frame(GDP_df = unique(GDP_df$`North American Industry Classification System (NAICS)`))
# df_EMPL <- data.frame(EMPL_df = unique(EMPL_df$`North American Industry Classification System (NAICS)`))
#
#
#
# df <- GHGE_df |> filter(COORDINATE == 1.1,
#                         Year == 2009)
#
# dd <- subset(GDP_df, grepl("212", `North American Industry Classification System (NAICS)`)) |>
#           filter(Year == 2019,
#                  Value == "Chained (2012) dollars",
#                  GEO == "Alberta")
df <- merge(GDP_dashdata, EMPL_dashdata, by = c("Year", "GEO", "NAICS"))
df <- merge(df, INVS_dashdata, by = c("Year", "GEO", "NAICS"), all = TRUE)
write.csv(GDP_dashdata, file = "C:/Users/MNAJI/BC-Econ-Dashboard/data/processed/GDP_Industry_dash.csv")
write.csv(EMPL_dashdata, file = "C:/Users/MNAJI/BC-Econ-Dashboard/data/processed/EMPL_Industry_dash.csv")
write.csv(INVS_dashdata, file = "C:/Users/MNAJI/BC-Econ-Dashboard/data/processed/INVS_Industry_dash.csv")
write.csv(df, file = "C:/Users/MNAJI/BC-Econ-Dashboard/data/processed/GDPEMPL_Industry_dash.csv")
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
library(statcanR)
library(dplyr)
library(tidyverse)
# GDP by industry and province
GDP_df <- statcan_download_data("36-10-0402-01", "eng")
GDP_df$REF_DATE <- as.Date(GDP_df$REF_DATE, origin = "2009-01-01")
GDP_df$Year <- format(GDP_df$REF_DATE, "%Y")
Sectors_GDP <- c("Agriculture, forestry, fishing and hunting",
"Mining, quarrying, and oil and gas extraction",
"Utilities",
"Construction",
"Manufacturing",
"Wholesale trade",
"44-45",
"Transportation and warehousing",
"Information and cultural industries",
"Finance and insurance",
"Real estate and rental and leasing",
"Professional, scientific and technical services",
"Management of companies and enterprises",
"Administrative and support, waste management and remediation services",
"Educational services \\[61\\]",
"Health care and social assistance",
"Arts, entertainment and recreation",
"Accommodation and food services",
"Other services (except public administration)",
"Public administration",
"\\[81\\]")
GDP_df <- GDP_df |>
select (Year, GEO, `North American Industry Classification System (NAICS)` , SCALAR_FACTOR, Value, VALUE) |>
filter (Value %in% c("Current dollars",
"Chained (2017) dollars"))|>
pivot_wider(names_from = Value, values_from = VALUE)
GDP_dashdata <- GDP_df[grepl(paste(Sectors_GDP, collapse = "|"),  GDP_df$`North American Industry Classification System (NAICS)`), ] |>
rename(NAICS = `North American Industry Classification System (NAICS)`,
CurrentValue = `Current dollars`,
Chained_2017 = `Chained (2017) dollars`) |>
mutate(NAICS = case_when(
NAICS == "Information and cultural industries [51]" ~ "Information, culture and recreation [51, 71]",
NAICS == "Arts, entertainment and recreation [71]" ~ "Information, culture and recreation [51, 71]",
TRUE ~ NAICS))|>
group_by(Year, GEO, NAICS, SCALAR_FACTOR ) |>
summarise(CurrentValue = sum(CurrentValue),
Chained_2017 = sum(Chained_2017))
GDP_dashdata <- GDP_dashdata |>
arrange(Year, GEO, NAICS, SCALAR_FACTOR) |>
group_by(GEO, NAICS, SCALAR_FACTOR) |>
mutate(NGDPG = (CurrentValue/lag(CurrentValue) - 1)*100,
RGDPG = (Chained_2017/lag(Chained_2017) - 1)*100
)
View(GDP_dashdata)
colnames(GDP_dashdata)
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
# Investment by industry and province
INVS_df <- statcan_download_data("34-10-0035-01", "eng")
INVS_df$REF_DATE <- as.Date(INVS_df$REF_DATE, origin = "2006-01-01")
INVS_df$Year <- format(INVS_df$REF_DATE, "%Y")
Sectors_INVS <- c("Agriculture, forestry, fishing and hunting",
"Mining, quarrying, and oil and gas extraction",
"Utilities",
"Construction",
"Manufacturing",
"Wholesale trade",
"44-45",
"Transportation and warehousing",
"Information and cultural industries",
"Finance and insurance",
"Real estate and rental and leasing",
"Professional, scientific and technical services",
"Management of companies and enterprises",
"Administrative and support, waste management and remediation services",
"Educational services \\[61\\]",
"Health care and social assistance",
"Arts, entertainment and recreation",
"Accommodation and food services",
"Other services (except public administration)",
"Public administration",
"\\[81\\]")
INVS_dashdata <- INVS_df[grepl(paste(Sectors_INVS, collapse = "|"),  INVS_df$`North American Industry Classification System (NAICS)`), ] |>
filter(  `Capital and repair expenditures` == "Capital expenditures") |>
select(Year, GEO, `North American Industry Classification System (NAICS)`, VALUE , SCALAR_FACTOR ) |>
rename(NAICS = `North American Industry Classification System (NAICS)`) |>
mutate(NAICS = case_when(
NAICS == "Information and cultural industries [51]" ~ "Information, culture and recreation [51, 71]",
NAICS == "Arts, entertainment and recreation [71]" ~ "Information, culture and recreation [51, 71]",
TRUE ~ NAICS))|>
group_by(Year, GEO, NAICS, SCALAR_FACTOR ) |>
summarise(VALUE = sum(VALUE))
INVS_dashdata <- rename(INVS_dashdata, "Investment" = "VALUE")
View(INVS_dashdata)
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
shiny::runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
library(statcanR)
library(dplyr)
library(tidyverse)
# GDP by industry and province
GDP_df <- statcan_download_data("36-10-0402-01", "eng")
View(GDP_df)
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
shiny::runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
shiny::runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
library(statcanR)
library(dplyr)
library(tidyverse)
# GDP by industry and province
GDP_df <- statcan_download_data("36-10-0402-01", "eng")
GDP_df$REF_DATE <- as.Date(GDP_df$REF_DATE, origin = "2009-01-01")
GDP_df$Year <- format(GDP_df$REF_DATE, "%Y")
View(GDP_df)
unique(GDP$df$GEO)
unique(GDP_df$GEO)
BC_GDP_df <- GDP_df |>
select (Year, GEO, `North American Industry Classification System (NAICS)` , SCALAR_FACTOR, Value, VALUE) |>
filter (Value %in% c("Current dollars",
"Chained (2017) dollars"),
GEO = "British Columbia")|>
rename(NAICS = `North American Industry Classification System (NAICS)`,
CurrentValue = `Current dollars`,
Chained_2017 = `Chained (2017) dollars`)|>
pivot_wider(names_from = Value, values_from = VALUE)
BC_GDP_df <- GDP_df |>
select (Year, GEO, `North American Industry Classification System (NAICS)` , SCALAR_FACTOR, Value, VALUE) |>
filter (Value %in% c("Current dollars",
"Chained (2017) dollars"),
GEO == "British Columbia")|>
rename(NAICS = `North American Industry Classification System (NAICS)`,
CurrentValue = `Current dollars`,
Chained_2017 = `Chained (2017) dollars`)|>
pivot_wider(names_from = Value, values_from = VALUE)
BC_GDP_df <- GDP_df |>
select (Year, GEO, `North American Industry Classification System (NAICS)` , SCALAR_FACTOR, Value, VALUE) |>
filter (Value %in% c("Current dollars",
"Chained (2017) dollars"),
GEO == "British Columbia")
BC_GDP_df <- BC_GDP_df |>
rename(NAICS = `North American Industry Classification System (NAICS)`,
CurrentValue = `Current dollars`,
Chained_2017 = `Chained (2017) dollars`)|>
pivot_wider(names_from = Value, values_from = VALUE)
View(BC_GDP_df)
BC_GDP_df <- GDP_df |>
select (Year, GEO, `North American Industry Classification System (NAICS)` , SCALAR_FACTOR, Value, VALUE) |>
filter (Value %in% c("Current dollars",
"Chained (2017) dollars"),
GEO == "British Columbia") |>
pivot_wider(names_from = Value, values_from = VALUE) |>
rename(NAICS = `North American Industry Classification System (NAICS)`,
CurrentValue = `Current dollars`,
Chained_2017 = `Chained (2017) dollars`)
dd <- BC_GDP_df |>
mutate(NAICS = case_when(
NAICS == "Computer and peripheral equipment manufacturing [3341]" ~ "ICT",
NAICS == "Communications equipment manufacturing [3342]" ~ "ICT",
NAICS == "Software publishers [5112]" ~ "ICT",
NAICS == "Telecommunications [517]" ~ "ICT",
NAICS == "Data processing, hosting, and related services [518]" ~ "ICT",
TRUE ~ NAICS))
View(dd)
dd <- BC_GDP_df |>
mutate(NAICS = case_when(
NAICS == "Computer and peripheral equipment manufacturing [3341]" ~ "ICT",
NAICS == "Communications equipment manufacturing [3342]" ~ "ICT",
NAICS == "Software publishers [5112]" ~ "ICT",
NAICS == "Telecommunications [517]" ~ "ICT",
NAICS == "Data processing, hosting, and related services [518]" ~ "ICT",
TRUE ~ NAICS)) |>
filter (NAICS == "ICT")
dd <- BC_GDP_df |>
mutate(NAICS = case_when(
NAICS == "Computer and peripheral equipment manufacturing [3341]" ~ "ICT",
NAICS == "Communications equipment manufacturing [3342]" ~ "ICT",
NAICS == "Software publishers [5112]" ~ "ICT",
NAICS == "Telecommunications [517]" ~ "ICT",
NAICS == "Data processing, hosting, and related services [518]" ~ "ICT",
TRUE ~ NAICS)) |>
filter (NAICS == "ICT")|>
group_by(Year, GEO, NAICS, SCALAR_FACTOR)|>
summarise(CurrentValue = sum(CurrentValue),
Chained_2017 = sum(Chained_2107))
dd <- BC_GDP_df |>
mutate(NAICS = case_when(
NAICS == "Computer and peripheral equipment manufacturing [3341]" ~ "ICT",
NAICS == "Communications equipment manufacturing [3342]" ~ "ICT",
NAICS == "Software publishers [5112]" ~ "ICT",
NAICS == "Telecommunications [517]" ~ "ICT",
NAICS == "Data processing, hosting, and related services [518]" ~ "ICT",
TRUE ~ NAICS)) |>
filter (NAICS == "ICT")|>
group_by(Year, GEO, NAICS, SCALAR_FACTOR)|>
summarise(CurrentValue = sum(CurrentValue),
Chained_2017 = sum(Chained_2017))
shiny::runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
shiny::runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
View(df)
# Libraries ----
library(shiny)
library(ggplot2)
library(tidyr)
library(tidyverse)
library(tidyquant)
library(lubridate)
library(plotly)
library(leaflet)
library(cowplot)
library(grid)
library(gtable)
options(shiny.autoreload = TRUE)
# Import data ----
url_GDPEMPL <- "https://github.com/mehdi-naji/BC-Econ-Dashboard/raw/main/data/processed/GDPEMPL_Industry_dash.csv"
df <- read.csv(url_GDPEMPL, header = TRUE)
dff <- na.omit(df)
Provinces <- unique(df$GEO)
Industries <- unique(df$NAICS)
year_range_df <- unique(df$Year)
year_range_dff <- unique(dff$Year)
year_min_range <- min(year_range_df)
year_max_range <- max(year_range_df)
year_min <- min(year_range_dff)
year_max <- max(year_range_dff)
View(dff)
fg <- df |> filter(GEO %in% input$province,
Year >= input$range[1] & Year <= input$range[2],
NAICS %in% input$industry) |>
mutate(GDP = ifelse(input$GDPtype == 1, Chained_2017, CurrentValue))|>
mutate(GDPG = ifelse(input$GDPtype == 1, RGDPG, NGDPG))
fg <- df |> filter(GEO %in% input$province,
Year >= input$range[1] & Year <= input$range[2],
NAICS %in% input$industry) |>
mutate(GDP = ifelse(1 == 1, Chained_2017, CurrentValue))|>
mutate(GDPG = ifelse(1 == 1, RGDPG, NGDPG))
fg <- df |> mutate(GDP = ifelse(1 == 1, Chained_2017, CurrentValue))|>
mutate(GDPG = ifelse(1 == 1, RGDPG, NGDPG))
View(fg)
View(df)
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
rename(fg, gdp = ifelse(1 == 1, Chained_2017, CurrentValue))
rename(fg, gdp = Chained_2017)
rename(fg, "gssp" = Chained_2017)
rename(fg, gssp := Chained_2017)
rename(fg, 'gssp' := Chained_2017)
rename(fg, gssp = Chained_2017)
fg <- fg |> rename(gssp = Chained_2017)
fg <- fg |> rename(gssp = ifelse(1==1, CurrentValue,Chained_2017))
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
runApp('C:/Users/MNAJI/BC-Econ-Dashboard/GDP-Labour-industries')
df1
library(statcanR)
library(dplyr)
library(tidyverse)
library(lubridate)
library(stringr)
# GDP ----
df1 <- statcan_download_data("27-10-0273-01", "eng")
unique(df1$prices)
df1
df1$Prices
unique(df1$Prices)
shiny::runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
url <- "https://github.com/mehdi-naji/StrongerBC-Project/raw/main/Data/Research_and_Development_1.csv"
df <- read.csv(url, header = TRUE)
df <- na.omit(df)
df
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
dss <- df |> filter (Funder != "total, all sectors (F)", Performer != "total, all sectors (F)")
View(dss)
dss <- df |> filter (Funder != "total, all sectors (F)", Performer != "total, all sectors (P)")
dss <- df |> filter (Funder != "total, all sectors", Performer != "total, all sectors")
View(df)
dss <- df |> filter (Funder != "total, all sectors", Performer != "total, all sectors")
dss <- df |> filter (Funder == "total, all sectors", Performer == "total, all sectors")
unique(df$Funder)[1]
unique(df$Performer)[1]
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
unique(df$Funder)[2]
unique(df$Funder)[3]
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
library(shinydashboard)
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
library(shiny)
library(shiny.semantic)
install.packages('shiny.semantic')
library(shiny)
library(shiny.semantic)
ui <- semanticPage(
title = "My App",
suppressDependencies("bootstrap"),
shinyjs::useShinyjs(),
tags$head(
tags$style(HTML("
.ui.menu .item {
text-align: center !important;
}
"))
),
menu(
"My App",
id = "navbar",
c(
a("ABOUT RadaR", href = "#")
)
),
# Add your UI elements here
)
server <- function(input, output, session) {
# Add your server logic here
}
shinyApp(ui = ui, server = server)
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
# Libraries ----
library(shiny)
library(ggplot2)
library(tidyr)
library(tidyverse)
library(tidyquant)
library(lubridate)
library(plotly)
library(leaflet)
library(cowplot)
library(grid)
library(gtable)
options(shiny.autoreload = TRUE)
# Downloading processed data ----
url <- "https://github.com/mehdi-naji/StrongerBC-Project/raw/main/Data/Research_and_Development_1.csv"
df <- read.csv(url, header = TRUE)
df <- na.omit(df)
url <- "https://github.com/mehdi-naji/StrongerBC-Project/raw/main/Data/Research_and_Development_Growth_1.csv"
df_growth <- read.csv(url, header = TRUE)
df_growth <- na.omit(df_growth)
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
View(df)
runApp('C:/Users/MNAJI/StrongerBC-Project/Research_and_Development')
