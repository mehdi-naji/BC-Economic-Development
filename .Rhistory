'Females' = as.integer(round((Females / total) *25)))
waffle_chart <- create_waffle_chart(parts, colors)
# grid[which(unique(wide_ddff$`Reason for part-time work`) == reason),
#      which(unique(wide_ddff$GEO) == geo)] <- list(waffle_chart)
}
}
waffle_chart <- create_waffle_chart(parts, colors)
create_waffle_chart(parts, colors)
parts
parts[1]
is.na(parts[1])
for (geo in unique(wide_ddff$GEO)) {
for (reason in unique(wide_ddff$`Reason for part-time work`)) {
Males <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Males
Females <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Females
total <- ifelse(is.na(Males) & is.na(Females), 0, Males + Females)
parts <- c('Males' = as.integer(round((Males / total) *25)),
'Females' = as.integer(round((Females / total) *25)))
waffle_chart <- create_waffle_chart(parts, colors)
# grid[which(unique(wide_ddff$`Reason for part-time work`) == reason),
#      which(unique(wide_ddff$GEO) == geo)] <- list(waffle_chart)
}
}
parts
total
geo
reason
Males
Females
total
library(waffle)
library(gridExtra)
library(tidyr)
# Assuming 'df1' is your data frame
ddff <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over")
ddff[is.na(ddff)] <- 0
wide_ddff <- pivot_wider(
data = ddff,
names_from = Sex,
values_from = VALUE,
values_fill = 0
)
colors <- c('Males' = "#FFA500", 'Females' = "#4384FF")
create_waffle_chart <- function(parts, colors) {
waffle(parts, rows = 5, colors = colors, size = 1.0) +
theme(legend.position = "none")
}
size <- length(unique(wide_ddff$`Reason for part-time work`)) * length(unique(wide_ddff$GEO))
grid <- matrix(1:size, nrow = length(unique(wide_ddff$`Reason for part-time work`)), byrow = TRUE)
for (geo in unique(wide_ddff$GEO)) {
for (reason in unique(wide_ddff$`Reason for part-time work`)) {
Males <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Males
Females <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Females
total <- ifelse(Males + Females == 0, 1,Males + Females)
parts <- c('Males' = as.integer(round((Males / total) *25)),
'Females' = as.integer(round((Females / total) *25)))
waffle_chart <- create_waffle_chart(parts, colors)
# grid[which(unique(wide_ddff$`Reason for part-time work`) == reason),
#      which(unique(wide_ddff$GEO) == geo)] <- list(waffle_chart)
}
}
# Flatten the list of waffle charts
grid_flat <- unlist(grid, recursive = FALSE)
# Now, you can arrange and display the waffle charts
grid.arrange(grobs = grid_flat)
library(waffle)
library(gridExtra)
library(tidyr)
# Assuming 'df1' is your data frame
ddff <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over")
ddff[is.na(ddff)] <- 0
wide_ddff <- pivot_wider(
data = ddff,
names_from = Sex,
values_from = VALUE,
values_fill = 0
)
colors <- c('Males' = "#FFA500", 'Females' = "#4384FF")
create_waffle_chart <- function(parts, colors) {
waffle(parts, rows = 5, colors = colors, size = 1.0) +
theme(legend.position = "none")
}
size <- length(unique(wide_ddff$`Reason for part-time work`)) * length(unique(wide_ddff$GEO))
grid <- matrix(1:size, nrow = length(unique(wide_ddff$`Reason for part-time work`)), byrow = TRUE)
for (geo in unique(wide_ddff$GEO)) {
for (reason in unique(wide_ddff$`Reason for part-time work`)) {
Males <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Males
Females <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Females
total <- ifelse(Males + Females == 0, 1,Males + Females)
parts <- c('Males' = as.integer(round((Males / total) *25)),
'Females' = as.integer(round((Females / total) *25)))
waffle_chart <- create_waffle_chart(parts, colors)
grid[which(unique(wide_ddff$`Reason for part-time work`) == reason),
which(unique(wide_ddff$GEO) == geo)] <- list(waffle_chart)
}
}
for (geo in unique(wide_ddff$GEO)) {
for (reason in unique(wide_ddff$`Reason for part-time work`)) {
Males <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Males
Females <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Females
total <- ifelse(Males + Females == 0, 1,Males + Females)
parts <- c('Males' = as.integer(round((Males / total) *25)),
'Females' = as.integer(round((Females / total) *25)))
waffle_chart <- create_waffle_chart(parts, colors)
grid[which(unique(wide_ddff$`Reason for part-time work`) == reason),
which(unique(wide_ddff$GEO) == geo)] <- list(waffle_chart)
}
}
reason
geo
library(waffle)
library(gridExtra)
library(tidyr)
ddff <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over")
ddff[is.na(ddff)] <- 0
wide_ddff <- pivot_wider(
data = ddff,
names_from = Sex,
values_from = VALUE,
values_fill = 0
)
colors <- c('Males' = "#FFA500", 'Females' = "#4384FF")
create_waffle_chart <- function(parts, colors) {
waffle(parts, rows = 5, colors = colors, size = 1.0) +
theme(legend.position = "none")
}
size <- length(unique(wide_ddff$`Reason for part-time work`)) * length(unique(wide_ddff$GEO))
grid <- matrix(1:size, nrow = length(unique(wide_ddff$`Reason for part-time work`)), byrow = TRUE)
for (geo in unique(wide_ddff$GEO)) {
for (reason in unique(wide_ddff$`Reason for part-time work`)) {
Males <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Males
Females <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Females
total <- ifelse(Males + Females == 0, 1,Males + Females)
parts <- c('Males' = as.integer(round((Males / total) *25)),
'Females' = as.integer(round((Females / total) *25)))
waffle_chart <- create_waffle_chart(parts, colors)
grid[which(unique(wide_ddff$`Reason for part-time work`) == reason),
which(unique(wide_ddff$GEO) == geo)] <- waffle_chart
}
}
which(unique(wide_ddff$`Reason for part-time work`)
d
which(unique(wide_ddff$`Reason for part-time work`) == reason)
which(unique(wide_ddff$GEO) == geo)
reason
geo
for (geo in unique(wide_ddff$GEO)) {
for (reason in unique(wide_ddff$`Reason for part-time work`)) {
Males <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Males
Females <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Females
total <- ifelse(Males + Females == 0, 1,Males + Females)
parts <- c('Males' = as.integer(round((Males / total) *25)),
'Females' = as.integer(round((Females / total) *25)))
waffle_chart <- create_waffle_chart(parts, colors)
grid[which(unique(wide_ddff$`Reason for part-time work`) == reason),
which(unique(wide_ddff$GEO) == geo)] <- waffle_chart
}
}
counter <- 1
for (geo in unique(wide_ddff$GEO)) {
for (reason in unique(wide_ddff$`Reason for part-time work`)) {
Males <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Males
Females <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Females
total <- ifelse(Males + Females == 0, 1,Males + Females)
parts <- c('Males' = as.integer(round((Males / total) *25)),
'Females' = as.integer(round((Females / total) *25)))
waffle_chart <- create_waffle_chart(parts, colors)
grid[counter] <- waffle_chart
counter <- counter + 1
}
}
grid.arrange(grobs = grid_flat)
library(waffle)
library(gridExtra)
library(tidyr)
# Assuming 'df1' is your data frame
ddff <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over")
ddff[is.na(ddff)] <- 0
wide_ddff <- pivot_wider(
data = ddff,
names_from = Sex,
values_from = VALUE,
values_fill = 0
)
colors <- c('Males' = "#FFA500", 'Females' = "#4384FF")
create_waffle_chart <- function(parts, colors) {
waffle(parts, rows = 5, colors = colors, size = 1.0) +
theme(legend.position = "none")
}
size <- length(unique(wide_ddff$`Reason for part-time work`)) * length(unique(wide_ddff$GEO))
grid <- matrix(1:size, nrow = length(unique(wide_ddff$`Reason for part-time work`)), byrow = TRUE)
counter <- 1
for (geo in unique(wide_ddff$GEO)) {
for (reason in unique(wide_ddff$`Reason for part-time work`)) {
Males <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Males
Females <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Females
total <- ifelse(Males + Females == 0, 1,Males + Females)
parts <- c('Males' = as.integer(round((Males / total) *25)),
'Females' = as.integer(round((Females / total) *25)))
waffle_chart <- create_waffle_chart(parts, colors)
grid[counter] <- waffle_chart
counter <- counter + 1
}
}
grid.arrange(grobs = grid)
library(waffle)
library(gridExtra)
library(tidyr)
ddff <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over")
ddff[is.na(ddff)] <- 0
wide_ddff <- pivot_wider(
data = ddff,
names_from = Sex,
values_from = VALUE,
values_fill = 0
)
colors <- c('Males' = "#FFA500", 'Females' = "#4384FF")
create_waffle_chart <- function(parts, colors) {
waffle(parts, rows = 5, colors = colors, size = 1.0) +
theme(legend.position = "none")
}
size <- length(unique(wide_ddff$`Reason for part-time work`)) * length(unique(wide_ddff$GEO))
grid <- matrix(1:size, nrow = length(unique(wide_ddff$`Reason for part-time work`)), byrow = TRUE)
counter <- 1
for (geo in unique(wide_ddff$GEO)) {
for (reason in unique(wide_ddff$`Reason for part-time work`)) {
Males <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Males
Females <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Females
total <- ifelse(Males + Females == 0, 1,Males + Females)
parts <- c('Males' = as.integer(round((Males / total) *25)),
'Females' = as.integer(round((Females / total) *25)))
waffle_chart <- create_waffle_chart(parts, colors)
grid[counter] <- waffle_chart
counter <- counter + 1
}
}
grid.arrange(grobs = grid)
library(waffle)
library(gridExtra)
library(tidyr)
# Assuming 'df1' is your data frame
ddff <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over")
ddff[is.na(ddff)] <- 0
wide_ddff <- pivot_wider(
data = ddff,
names_from = Sex,
values_from = VALUE,
values_fill = 0
)
colors <- c('Males' = "#FFA500", 'Females' = "#4384FF")
create_waffle_chart <- function(parts, colors) {
waffle(parts, rows = 5, colors = colors, size = 1.0) +
theme(legend.position = "none")
}
size <- length(unique(wide_ddff$`Reason for part-time work`)) * length(unique(wide_ddff$GEO))
grid <- matrix(1:size, nrow = length(unique(wide_ddff$`Reason for part-time work`)), byrow = TRUE)
waffle_charts <- list()
for (geo in unique(wide_ddff$GEO)) {
for (reason in unique(wide_ddff$`Reason for part-time work`)) {
Males <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Males
Females <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Females
total <- ifelse(Males + Females == 0, 1,Males + Females)
parts <- c('Males' = as.integer(round((Males / total) *25)),
'Females' = as.integer(round((Females / total) *25)))
waffle_chart <- create_waffle_chart(parts, colors)
waffle_charts[[length(waffle_charts) + 1]] <- waffle_chart
}
}
grid.arrange(grobs = waffle_charts)
library(waffle)
library(gridExtra)
library(tidyr)
ddff <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over")
ddff[is.na(ddff)] <- 0
wide_ddff <- pivot_wider(
data = ddff,
names_from = Sex,
values_from = VALUE,
values_fill = 0
)
colors <- c('Males' = "#FFA500", 'Females' = "#4384FF")
# create_waffle_chart <- function(parts, colors) {
#   waffle(parts, rows = 5, colors = colors, size = 1.0) +
#     theme(legend.position = "none")
# }
size <- length(unique(wide_ddff$`Reason for part-time work`)) * length(unique(wide_ddff$GEO))
grid <- matrix(1:size, nrow = length(unique(wide_ddff$`Reason for part-time work`)), byrow = TRUE)
waffle_charts <- list()
for (geo in unique(wide_ddff$GEO)) {
for (reason in unique(wide_ddff$`Reason for part-time work`)) {
Males <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Males
Females <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$`Reason for part-time work` == reason, ]$Females
total <- ifelse(Males + Females == 0, 1,Males + Females)
parts <- c('Males' = as.integer(round((Males / total) *25)),
'Females' = as.integer(round((Females / total) *25)))
waffle_chart <- waffle(parts, rows = 5, colors = colors, size = 1.0) +
theme(legend.position = "none")
waffle_charts[[length(waffle_charts) + 1]] <- waffle_chart
}
}
grid.arrange(grobs = waffle_charts)
ddff <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over",
GEO %in% c("Canada",
"Quebec",
"Alberta",
"British Columbia"))
ddff <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over",
GEO %in% c("Canada",
"Quebec",
"Alberta",
"British Columbia")
)|>
mutate( auxi = case_when(
`Reason for part-time work` %in% c(
"Business conditions, did not look for full-time work in last month",
"Business conditions, looked for full-time work in last month") ~ "Business conditions",
`Reason for part-time work` %in% c(
"Could not find full-time work, did not look for full-time work in last month",
"Could not find full-time work, looked for full-time work in last month") ~ "Could not find full-time work",
TRUE ~ "None")
)
ddff <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over",
GEO %in% c("Canada",
"Quebec",
"Alberta",
"British Columbia")
)|>
mutate( Reason = case_when(
`Reason for part-time work` %in% c(
"Business conditions, did not look for full-time work in last month",
"Business conditions, looked for full-time work in last month") ~ "Business conditions",
`Reason for part-time work` %in% c(
"Could not find full-time work, did not look for full-time work in last month",
"Could not find full-time work, looked for full-time work in last month") ~ "Could not find full-time work",
TRUE ~ `Reason for part-time work`)
)
ddff1 <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over",
GEO %in% c("Canada",
"Quebec",
"Alberta",
"British Columbia")
)|>
mutate( Reason = case_when(
`Reason for part-time work` %in% c(
"Business conditions, did not look for full-time work in last month",
"Business conditions, looked for full-time work in last month") ~ "Business conditions",
`Reason for part-time work` %in% c(
"Could not find full-time work, did not look for full-time work in last month",
"Could not find full-time work, looked for full-time work in last month") ~ "Could not find full-time work",
TRUE ~ `Reason for part-time work`)
) |>
group_by(Year, GEO, Sex, `Age group`, Reason) |>
summarise(VALUE = sum(VALUE)) |>
ungroup()
View(ddff1)
ddff <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over",
GEO %in% c("Canada",
"Quebec",
"Alberta",
"British Columbia")
)|>
mutate( Reason = case_when(
`Reason for part-time work` %in% c(
"Business conditions, did not look for full-time work in last month",
"Business conditions, looked for full-time work in last month") ~ "Business conditions",
`Reason for part-time work` %in% c(
"Could not find full-time work, did not look for full-time work in last month",
"Could not find full-time work, looked for full-time work in last month") ~ "Could not find full-time work",
TRUE ~ `Reason for part-time work`)
) |>
group_by(Year, GEO, Sex, `Age group`, Reason) |>
summarise(VALUE = sum(VALUE)) |>
ungroup()
ddff <- df1 |>
c
ddff <- df1 |>
ddff <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over",
GEO %in% c("Canada",
"Quebec",
"Alberta",
"British Columbia")  )|>
mutate( Reason = case_when(
`Reason for part-time work` %in% c(
"Business conditions, did not look for full-time work in last month",
"Business conditions, looked for full-time work in last month") ~ "Business conditions",
`Reason for part-time work` %in% c(
"Could not find full-time work, did not look for full-time work in last month",
"Could not find full-time work, looked for full-time work in last month") ~ "Could not find full-time work",
TRUE ~ `Reason for part-time work`)
) |>
group_by(Year, GEO, Sex, `Age group`, Reason) |>
summarise(VALUE = sum(VALUE)) |>
ungroup() |>
filter(Reason %in% c(
"Part-time employment, all reasons",
"Own illness",
"Caring for children",
"Going to school",
"Personal preference",
"Could not find full-time work",
"Business conditions")
)
View(ddff)
ddff <- df1 |>
filter(
Year == 2010,
Sex != "Both sexes",
`Age group` == "15 years and over",
GEO %in% c("Canada",
"Quebec",
"Alberta",
"British Columbia")  )|>
mutate( Reason = case_when(
`Reason for part-time work` %in% c(
"Business conditions, did not look for full-time work in last month",
"Business conditions, looked for full-time work in last month") ~ "Business conditions",
`Reason for part-time work` %in% c(
"Could not find full-time work, did not look for full-time work in last month",
"Could not find full-time work, looked for full-time work in last month") ~ "Could not find full-time work",
TRUE ~ `Reason for part-time work`)
) |>
group_by(Year, GEO, Sex, `Age group`, Reason) |>
summarise(VALUE = sum(VALUE)) |>
ungroup() |>
filter(Reason %in% c(
"Part-time employment, all reasons",
"Own illness",
"Caring for children",
"Going to school",
"Personal preference",
"Could not find full-time work",
"Business conditions"))
View(ddff)
ddff[is.na(ddff)] <- 0
wide_ddff <- pivot_wider(
data = ddff,
names_from = Sex,
values_from = VALUE,
values_fill = 0
)
colors <- c('Males' = "#FFA500", 'Females' = "#4384FF")
size <- length(unique(wide_ddff$`Reason for part-time work`)) * length(unique(wide_ddff$GEO))
size <- length(unique(wide_ddff$Reason)) * length(unique(wide_ddff$GEO))
grid <- matrix(1:size, nrow = length(unique(wide_ddff$Reason)), byrow = TRUE)
waffle_charts <- list()
for (geo in unique(wide_ddff$GEO)) {
for (reason in unique(wide_ddff$Reason)) {
Males <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$Reason == reason, ]$Males
Females <-  wide_ddff[wide_ddff$GEO == geo & wide_ddff$Reason == reason, ]$Females
total <- ifelse(Males + Females == 0, 1,Males + Females)
parts <- c('Males' = as.integer(round((Males / total) *25)),
'Females' = as.integer(round((Females / total) *25)))
waffle_chart <- waffle(parts, rows = 5, colors = colors, size = 1.0) +
theme(legend.position = "none")
waffle_charts[[length(waffle_charts) + 1]] <- waffle_chart
}
}
grid.arrange(grobs = waffle_charts)
runApp('C:/Users/MNAJI/StrongerBC-Project/app_homepage.R')
runApp('C:/Users/MNAJI/StrongerBC-Project/app_homepage.R')
